geom_line(data = dff[dff$pname == "EPIC (idat)",],
aes(year, samples), color = "cyan") +
guides(shape = FALSE) +
theme(legend.position = c(0.8, 0.2))
ggplot(dff, aes(year, samples)) + theme_bw() +
xlab("Year") + ylab("Cumulative Samples") +
geom_point(aes(colour = plab, shape = platform)) +
scale_shape_manual(name = "", values = sv, lv) +
scale_colour_manual(name = "", values = vv, labels = lv) +
geom_line(data = dff[dff$pname == "HM27K (idat)",],
aes(year, samples), color = "brown") +
geom_line(data = dff[dff$pname == "HM27K (all)",],
aes(year, samples), color = "gold") +
geom_line(data = dff[dff$pname == "HM450K (all)",],
aes(year, samples), color = "green") +
geom_line(data = dff[dff$pname == "HM450K (idat)",],
aes(year, samples), color = "forestgreen") +
geom_line(data = dff[dff$pname == "EPIC (all)",],
aes(year, samples), color = "blue") +
geom_line(data = dff[dff$pname == "EPIC (idat)",],
aes(year, samples), color = "cyan") +
guides(shape = FALSE) +
theme(legend.position = c(0.5, 0.5))
ggplot(dff, aes(year, samples)) + theme_bw() +
xlab("Year") + ylab("Cumulative Samples") +
geom_point(aes(colour = plab, shape = platform)) +
scale_shape_manual(name = "", values = sv, lv) +
scale_colour_manual(name = "", values = vv, labels = lv) +
geom_line(data = dff[dff$pname == "HM27K (idat)",],
aes(year, samples), color = "brown") +
geom_line(data = dff[dff$pname == "HM27K (all)",],
aes(year, samples), color = "gold") +
geom_line(data = dff[dff$pname == "HM450K (all)",],
aes(year, samples), color = "green") +
geom_line(data = dff[dff$pname == "HM450K (idat)",],
aes(year, samples), color = "forestgreen") +
geom_line(data = dff[dff$pname == "EPIC (all)",],
aes(year, samples), color = "blue") +
geom_line(data = dff[dff$pname == "EPIC (idat)",],
aes(year, samples), color = "cyan") +
guides(shape = FALSE) +
theme(legend.position = c(0.2, 0.5))
lv <- c("HM450K (all)", "HM450K (idat)", "EPIC (all)", "EPIC (idat)", "HM27K (all)", "HM27K (idat)")
vv <- c("green", "forestgreen", "blue", "cyan", "gold", "brown")
sv <- c(17, 17, 16, 16, 18, 18)
ggplot(dff, aes(year, samples)) + theme_bw() +
xlab("Year") + ylab("Cumulative Samples") +
geom_point(aes(colour = plab, shape = platform)) +
scale_shape_manual(name = "", values = sv, lv) +
scale_colour_manual(name = "", values = vv, labels = lv) +
geom_line(data = dff[dff$pname == "HM27K (idat)",],
aes(year, samples), color = "brown") +
geom_line(data = dff[dff$pname == "HM27K (all)",],
aes(year, samples), color = "gold") +
geom_line(data = dff[dff$pname == "HM450K (all)",],
aes(year, samples), color = "green") +
geom_line(data = dff[dff$pname == "HM450K (idat)",],
aes(year, samples), color = "forestgreen") +
geom_line(data = dff[dff$pname == "EPIC (all)",],
aes(year, samples), color = "blue") +
geom_line(data = dff[dff$pname == "EPIC (idat)",],
aes(year, samples), color = "cyan") +
guides(shape = FALSE) +
theme(legend.position = c(0.1, 0.6))
lv <- c("HM450K (all)", "HM450K (idat)", "EPIC (all)", "EPIC (idat)", "HM27K (all)", "HM27K (idat)")
vv <- c("green", "forestgreen", "blue", "cyan", "gold", "brown")
sv <- c(17, 17, 16, 16, 18, 18)
ggplot(dff, aes(year, samples)) + theme_bw() +
xlab("Year") + ylab("Cumulative Samples") +
geom_point(aes(colour = plab, shape = platform)) +
scale_shape_manual(name = "", values = sv, lv) +
scale_colour_manual(name = "", values = vv, labels = lv) +
geom_line(data = dff[dff$pname == "HM27K (idat)",],
aes(year, samples), color = "brown") +
geom_line(data = dff[dff$pname == "HM27K (all)",],
aes(year, samples), color = "gold") +
geom_line(data = dff[dff$pname == "HM450K (all)",],
aes(year, samples), color = "green") +
geom_line(data = dff[dff$pname == "HM450K (idat)",],
aes(year, samples), color = "forestgreen") +
geom_line(data = dff[dff$pname == "EPIC (all)",],
aes(year, samples), color = "blue") +
geom_line(data = dff[dff$pname == "EPIC (idat)",],
aes(year, samples), color = "cyan") +
guides(shape = FALSE) +
theme(legend.position = c(0.2, 0.6))
ggplot(dff, aes(year, samples)) + theme_bw() +
xlab("Year") + ylab("Cumulative Samples") +
geom_point(aes(colour = plab, shape = platform)) +
scale_shape_manual(name = "", values = sv, labels = lv) +
scale_colour_manual(name = "", values = vv, labels = lv) +
geom_line(data = dff[dff$pname == "HM27K (idat)",],
aes(year, samples), color = "brown") +
geom_line(data = dff[dff$pname == "HM27K (all)",],
aes(year, samples), color = "gold") +
geom_line(data = dff[dff$pname == "HM450K (all)",],
aes(year, samples), color = "green") +
geom_line(data = dff[dff$pname == "HM450K (idat)",],
aes(year, samples), color = "forestgreen") +
geom_line(data = dff[dff$pname == "EPIC (all)",],
aes(year, samples), color = "blue") +
geom_line(data = dff[dff$pname == "EPIC (idat)",],
aes(year, samples), color = "cyan") +
theme(legend.position = c(0.2, 0.6))
lv <- c("HM450K (all)", "HM450K (idat)", "EPIC (all)", "EPIC (idat)", "HM27K (all)", "HM27K (idat)")
vv <- c("green", "forestgreen", "blue", "cyan", "gold", "brown")
sv <- c(17, 17, 16, 16, 18, 18)
lname <- "Platform (Type)"
ggplot(dff, aes(year, samples)) + theme_bw() +
xlab("Year") + ylab("Cumulative Samples") +
geom_point(aes(colour = plab, shape = platform)) +
scale_shape_manual(name = lname, values = sv, labels = lv) +
scale_colour_manual(name = lname, values = vv, labels = lv) +
geom_line(data = dff[dff$pname == "HM27K (idat)",],
aes(year, samples), color = "brown") +
geom_line(data = dff[dff$pname == "HM27K (all)",],
aes(year, samples), color = "gold") +
geom_line(data = dff[dff$pname == "HM450K (all)",],
aes(year, samples), color = "green") +
geom_line(data = dff[dff$pname == "HM450K (idat)",],
aes(year, samples), color = "forestgreen") +
geom_line(data = dff[dff$pname == "EPIC (all)",],
aes(year, samples), color = "blue") +
geom_line(data = dff[dff$pname == "EPIC (idat)",],
aes(year, samples), color = "cyan") +
theme(legend.position = c(0.2, 0.6))
ggplot(dff, aes(year, samples)) + theme_bw() +
xlab("Year") + ylab("Cumulative Samples") +
geom_point(aes(colour = plab, shape = platform)) +
scale_shape_manual(name = lname, values = sv, labels = lv) +
scale_colour_manual(name = lname, values = vv, labels = lv)
ggplot(dff, aes(year, samples)) + theme_bw() +
xlab("Year") + ylab("Cumulative Samples") +
geom_point(aes(colour = plab, shape = platform)) +
scale_shape_manual(name = lname, values = sv, labels = lv) +
scale_colour_manual(name = lname, values = vv, labels = lv) +
guides(colour = guide_legend(override.aes = list(shape = sv,
colour = vv)))
ggplot(dff, aes(year, samples)) + theme_bw() +
xlab("Year") + ylab("Cumulative Samples") +
geom_point(aes(colour = plab, shape = platform)) +
scale_shape_manual(values = sv) + scale_colour_manual(values = vv) +
guides(colour = guide_legend(override.aes = list(shape = sv,
colour = vv)))
ggplot(dff, aes(year, samples)) + theme_bw() +
xlab("Year") + ylab("Cumulative Samples") +
geom_point(aes(colour = plab, shape = platform)) + scale_shape(guide = FALSE) +
scale_shape_manual(values = sv) + scale_colour_manual(values = vv) +
guides(colour = guide_legend(override.aes = list(shape = sv, colour = vv)))
ggplot(dff, aes(year, samples)) + theme_bw() +
xlab("Year") + ylab("Cumulative Samples") +
geom_point(aes(colour = plab, shape = platform)) + guides(shape = FALSE) +
scale_shape_manual(values = sv) + scale_colour_manual(values = vv) +
guides(colour = guide_legend(override.aes = list(shape = sv, colour = vv)))
ggplot(dff, aes(year, samples)) + theme_bw() +
xlab("Year") + ylab("Cumulative Samples") +
geom_point(aes(colour = plab, shape = platform)) + guides(shape = FALSE) +
scale_shape_manual(values = sv) + scale_colour_manual(values = vv) +
guides(colour = guide_legend(override.aes = list(shape = sv, colour = vv))) +
geom_line(data = dff[dff$pname == "HM27K (idat)",],
aes(year, samples), color = "brown") +
geom_line(data = dff[dff$pname == "HM27K (all)",],
aes(year, samples), color = "gold") +
geom_line(data = dff[dff$pname == "HM450K (all)",],
aes(year, samples), color = "green") +
geom_line(data = dff[dff$pname == "HM450K (idat)",],
aes(year, samples), color = "forestgreen") +
geom_line(data = dff[dff$pname == "EPIC (all)",],
aes(year, samples), color = "blue") +
geom_line(data = dff[dff$pname == "EPIC (idat)",],
aes(year, samples), color = "cyan") +
theme(legend.position = c(0.2, 0.6))
?guides
dff$`Platform (Type)` <- dff$plab
lv <- c("HM450K (all)", "HM450K (idat)", "EPIC (all)", "EPIC (idat)", "HM27K (all)", "HM27K (idat)")
vv <- c("green", "forestgreen", "blue", "cyan", "gold", "brown")
sv <- c(17, 17, 16, 16, 18, 18)
lname <- "Platform (Type)"
ggplot(dff, aes(year, samples)) + theme_bw() +
xlab("Year") + ylab("Cumulative Samples") +
geom_point(aes(colour = `Platform (Type)`, shape = platform)) + guides(shape = FALSE) +
scale_shape_manual(values = sv) + scale_colour_manual(values = vv) +
guides(colour = guide_legend(override.aes = list(shape = sv, colour = vv))) +
geom_line(data = dff[dff$pname == "HM27K (idat)",],
aes(year, samples), color = "brown") +
geom_line(data = dff[dff$pname == "HM27K (all)",],
aes(year, samples), color = "gold") +
geom_line(data = dff[dff$pname == "HM450K (all)",],
aes(year, samples), color = "green") +
geom_line(data = dff[dff$pname == "HM450K (idat)",],
aes(year, samples), color = "forestgreen") +
geom_line(data = dff[dff$pname == "EPIC (all)",],
aes(year, samples), color = "blue") +
geom_line(data = dff[dff$pname == "EPIC (idat)",],
aes(year, samples), color = "cyan") +
theme(legend.position = c(0.2, 0.6))
setwd("~/Documents/GitHub/recountmethylation_manuscript_supplement/inst/scripts")
source("fig1a.R")
source("fig1a")
list.files()
source("fig1a.R")
source("fig1a.R")
source("fig1a.R")
source("fig1a.R")
source("fig1a.R")
source("fig1a.R")
source("fig1a.R")
source("fig1a.R")
source("fig1a.R")
fig1a
list.files9
list.iles()
list.files()
source("fig1a.R")
fig1a
setwd("~/Documents/GitHub/recountmethylation_manuscript_supplement/vignettes")
source("fig1a.R")
fig1a
source("fig1a.R")
fig1a
source("fig1a.R")
fig1a
knitr::opts_chunk$set(echo = TRUE)
source("figs1.R")
figs1
library(ggplot2)
library(ggforce)
library(data.table)
#----------
# load data
#----------
fn <- "table-s5_qcfreq_gsewise.csv"
qcmd <- fread(fn, sep = ",", data.table = FALSE)
install.packages("ggforce")
library(ggplot2)
library(ggforce)
library(data.table)
#----------
# load data
#----------
fn <- "table-s5_qcfreq_gsewise.csv"
qcmd <- fread(fn, sep = ",", data.table = FALSE)
bam = qcmd[,grepl("^ba\\..*|^gsm$", colnames(qcmd))]
colnames(bam) = gsub("ba\\.", "", colnames(bam))
bat = bathresh(bam)
dim(bam)
dim(qcmd)
fn <- "table-s2_qcmd-allgsm.csv"
qcmd <- fread(fn, sep = ",", data.table = FALSE)
bam = qcmd[,grepl("^ba\\..*|^gsm$", colnames(qcmd))]
colnames(bam) = gsub("ba\\.", "", colnames(bam))
bat = bathresh(bam)
head(bam)
colnames(bam)
source("beadarray_cgctrlmetrics.R")
fn <- "table-s2_qcmd-allgsm.csv"
qcmd <- fread(fn, sep = ",", data.table = FALSE)
bam = qcmd[, c(2:18)]
bat = bathresh(bam)
bat <- bathresh(qcmd[, c(2:18)])
dfplot = matrix(nrow = 0, ncol = 3)
for(c in colnames(bat)[2:ncol(bat)]){
dfplot = rbind(dfplot,
matrix(c(length(which(bat[,c] == "PASS")), "ABOVE", c),
nrow = 1))
dfplot = rbind(dfplot,
matrix(c(length(which(bat[,c] == "FAIL")), "BELOW", c),
nrow = 1))
}
bathresh = function(rm = rm, pass.lab = "PASS", fail.lab = "FAIL"){
dft = data.frame(restoration.grn = 0,
biotin.stain.red = 5,
biotin.stain.grn = 5,
specificityI.red = 1,
specificityI.grn = 1,
specificityII = 1,
extension.red = 5,
extension.grn = 5,
hyb.hi.med = 1,
hyb.med.low = 1,
target.removal.1 = 1,
target.removal.2 = 1,
bisulfite.conv.I.red = 1,
bisulfite.conv.I.grn = 1,
bisulfite.conv.II = 1,
nonpolymorphic.red = 5,
nonpolymorphic.grn = 5,
stringsAsFactors = F)
for(c in colnames(rm)[2:ncol(rm)]){
rm[,c] <- ifelse(rm[,c] < dft[, c], "FAIL", "PASS")
}
return(rm)
}
bat <- bathresh(qcmd[, c(2:18)])
colnames(qcmd)
bathresh = function(rm, pass.lab = "PASS", fail.lab = "FAIL"){
dft = data.frame(restoration.grn = 0,
biotin.stain.red = 5,
biotin.stain.grn = 5,
specificityI.red = 1,
specificityI.grn = 1,
specificityII = 1,
extension.red = 5,
extension.grn = 5,
hyb.hi.med = 1,
hyb.med.low = 1,
target.removal.1 = 1,
target.removal.2 = 1,
bisulfite.conv.I.red = 1,
bisulfite.conv.I.grn = 1,
bisulfite.conv.II = 1,
nonpolymorphic.red = 5,
nonpolymorphic.grn = 5,
stringsAsFactors = F)
for(c in colnames(rm)[2:ncol(rm)]){
rm[,c] <- ifelse(rm[,c] < dft[, c], "FAIL", "PASS")
}
return(rm)
}
head(qcmd[, c(2:18)])
dim(qcmd[, c(3:18)])
colnames(qcmd)
ncol(qcmd)
bat <- qcmd[,grepl("^ba.*", colnames(qcmd))]
head(bat)
colnames(bat) <- gsub("^ba", "", qcmd)
fn <- "table-s2_qcmd-allgsm.csv"
qcmd <- fread(fn, sep = ",", data.table = FALSE)
bat <- qcmd[,grepl("^ba.*", colnames(qcmd))]
colnames(bat) <- gsub("^ba", "", colnames(qcmd))
gsub("^ba", "", colnames(qcmd))
fn <- "table-s2_qcmd-allgsm.csv"
qcmd <- fread(fn, sep = ",", data.table = FALSE)
bat <- qcmd[,grepl("^ba.*", colnames(qcmd))]
colnames(bat) <- gsub("^ba", "", colnames(bat))
colnames(bat)
colnames(bat) <- gsub("^ba\\.", "", colnames(bat))
head(bat)
bat <- qcmd[,grepl("^ba.*", colnames(qcmd))]
colnames(bat) <- gsub("^ba\\.", "", colnames(bat))
head(bat)
tr <- bathresh(qcmd[, c(3:18)])
colnames(qcmd)
which.bacol <- which(grepl("^ba.*", colnames(qcmd)))
bat <- qcmd[,c(1, which.bacol)]
colnames(bat) <- gsub("^ba\\.", "", colnames(bat))
head(bat)
tr <- bathresh(bat)
head(tr)
tr <- bathresh(bat)
dfplot = matrix(nrow = 0, ncol = 3)
for(c in colnames(bat)[2:ncol(bat)]){
dfplot = rbind(dfplot,
matrix(c(length(which(bat[,c] == "PASS")), "ABOVE", c),
nrow = 1))
dfplot = rbind(dfplot,
matrix(c(length(which(bat[,c] == "FAIL")), "BELOW", c),
nrow = 1))
}
dfplot = as.data.frame(dfplot, stringsAsFactors = F)
dfplot[,1] = as.numeric(dfplot[,1])
colnames(dfplot) = c("Num. Samples", "Thresh. Count", "Metric")
dfi = dfplot[dfplot[,2] == "BELOW",]
dfplot$Metric = factor(dfplot$Metric, levels = dfi[,3][rev(order(dfi[,1]))])
ggplot(dfplot, aes(x = `Metric`, y = `Num. Samples`, fill = `Thresh. Count`)) +
geom_bar(stat = 'identity') + scale_fill_manual(values = c("limegreen", "red")) +
theme_bw() + xlab("BeadArray Quality Metric") + ylab("Number of\nSamples")
theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.title = element_blank()) +
facet_zoom(ylim = c(0, 2500), zoom.data = ifelse(a <= 10, NA, FALSE))
dfplot
head(dfplot)
tr <- bathresh(bat)
dfplot = matrix(nrow = 0, ncol = 3)
for(c in colnames(bat)[2:ncol(bat)]){
dfplot = rbind(dfplot,
matrix(c(length(which(bat[,c] == "PASS")), "ABOVE", c),
nrow = 1))
dfplot = rbind(dfplot,
matrix(c(length(which(bat[,c] == "FAIL")), "BELOW", c),
nrow = 1))
}
dfplot
dim(tr)
table(tr$restoration.grn)
table(tr$specificityI.red)
ncol(tr)
tr <- bathresh(bat)
dfplot <- matrix(nrow = 0, ncol = 3)
for(c in 2:18){
num.pass <- length(which(tr[,c] == "PASS"))
num.fail <- length(which(tr[,c] == "FAIL"))
dfplot = rbind(dfplot, matrix(c(num.pass, "ABOVE", c), nrow = 1))
dfplot = rbind(dfplot, matrix(c(num.fail, "BELOW", c), nrow = 1))
}
dfplot
dfplot = as.data.frame(dfplot, stringsAsFactors = F)
dfplot[,1] = as.numeric(dfplot[,1])
colnames(dfplot) = c("Num. Samples", "Thresh. Count", "Metric")
dfi = dfplot[dfplot[,2] == "BELOW",]
dfplot$Metric = factor(dfplot$Metric, levels = dfi[,3][rev(order(dfi[,1]))])
dfplot
fig2a <- ggplot(dfplot, aes(x = `Metric`, y = `Num. Samples`, fill = `Thresh. Count`)) +
geom_bar(stat = 'identity') + scale_fill_manual(values = c("limegreen", "red")) +
theme_bw() + xlab("BeadArray Quality Metric") + ylab("Number of\nSamples")
theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.title = element_blank()) +
facet_zoom(ylim = c(0, 2500), zoom.data = ifelse(a <= 10, NA, FALSE))
dfplot
class(dfplot[,1])
class(dfplot[,2])
class(dfplot[,3])
class(dfplot[,4])
colnames(dfplot)
ggplot(dfplot, aes(x = `Metric`, y = `Num. Samples`, fill = `Thresh. Count`)) +
geom_bar(stat = 'identity') + scale_fill_manual(values = c("limegreen", "red"))
ggplot(dfplot, aes(x = `Metric`, y = `Num. Samples`, fill = `Thresh. Count`)) +
geom_bar(stat = 'identity') + scale_fill_manual(values = c("limegreen", "red")) +
theme_bw() + xlab("BeadArray Quality Metric") + ylab("Number of\nSamples")
ggplot(dfplot, aes(x = `Metric`, y = `Num. Samples`, fill = `Thresh. Count`)) +
geom_bar(stat = 'identity') + scale_fill_manual(values = c("limegreen", "red")) +
theme_bw() + xlab("BeadArray Quality Metric") + ylab("Number of\nSamples")
theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.title = element_blank())
ggplot(dfplot, aes(x = `Metric`, y = `Num. Samples`, fill = `Thresh. Count`)) +
geom_bar(stat = 'identity') + scale_fill_manual(values = c("limegreen", "red")) +
theme_bw() + xlab("BeadArray Quality Metric") + ylab("Number of\nSamples")
theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.title = element_blank()) +
facet_zoom(ylim = c(0, 2500), zoom.data = ifelse(a <= 10, NA, FALSE))
?facet_zoom
ggplot(dfplot, aes(x = `Metric`, y = `Num. Samples`, fill = `Thresh. Count`)) +
geom_bar(stat = 'identity') + scale_fill_manual(values = c("limegreen", "red")) +
theme_bw() + xlab("BeadArray Quality Metric") + ylab("Number of\nSamples")
theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.title = element_blank()) +
facet_zoom(ylim = c(0, 2500))
ggplot(dfplot, aes(x = `Metric`, y = `Num. Samples`, fill = `Thresh. Count`)) +
geom_bar(stat = 'identity') + scale_fill_manual(values = c("limegreen", "red")) +
theme_bw() + xlab("BeadArray Quality Metric") + ylab("Number of\nSamples")
theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.title = element_blank()) +
facet_zoom(ylim = c(0, 2500), zoom.data = ifelse(a <= 10, NA, a))
ggplot(dfplot, aes(x = `Metric`, y = `Num. Samples`, fill = `Thresh. Count`)) +
geom_bar(stat = 'identity') + scale_fill_manual(values = c("limegreen", "red")) +
theme_bw() + xlab("BeadArray Quality Metric") + ylab("Number of\nSamples")
theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.title = element_blank()) +
facet_zoom(ylim = c(0, 2500), zoom.data = ifelse(x <= 10, NA, a))
ggplot(dfplot, aes(x = `Metric`, y = `Num. Samples`, fill = `Thresh. Count`)) +
geom_bar(stat = 'identity') + scale_fill_manual(values = c("limegreen", "red")) +
theme_bw() + xlab("BeadArray Quality Metric") + ylab("Number of\nSamples")
theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.title = element_blank()) +
facet_zoom(ylim = c(0, 2500), xlim = c(1, 17))
ggplot(dfplot, aes(x = `Metric`, y = `Num. Samples`, fill = `Thresh. Count`)) +
geom_bar(stat = 'identity') + scale_fill_manual(values = c("limegreen", "red")) +
theme_bw() + xlab("BeadArray Quality Metric") + ylab("Number of\nSamples")
theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.title = element_blank()) +
facet_zoom(ylim = c(0, 2500), xlim = `Metric` %in% unique(dfplot$Metric))
ggplot(dfplot, aes(x = `Metric`, y = `Num. Samples`, fill = `Thresh. Count`)) +
geom_bar(stat = 'identity') + scale_fill_manual(values = c("limegreen", "red")) +
theme_bw() + xlab("BeadArray Quality Metric") + ylab("Number of\nSamples")
theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.title = element_blank()) +
facet_zoom(ylim = c(0, 2500), xlim = dfplot$`Metric` %in% unique(dfplot$Metric))
ggplot(dfplot, aes(x = `Metric`, y = `Num. Samples`, fill = `Thresh. Count`)) +
geom_bar(stat = 'identity') +
scale_fill_manual(values = c("limegreen", "red")) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
facet_zoom(ylim = c(0, 2500), zoom.data = ifelse(a <= 10, NA, FALSE)) +
xlab("BeadArray Metric") + ylab("Number of\nSamples")
dfplot$Metric
tr
colnames(tr)
head(dfi)
head(dfpot)
tr <- bathresh(bat)
dfplot <- matrix(nrow = 0, ncol = 3)
for(c in colnames(tr)[2:18]){
num.pass <- length(which(tr[,c] == "PASS"))
num.fail <- length(which(tr[,c] == "FAIL"))
dfplot = rbind(dfplot, matrix(c(num.pass, "ABOVE", c), nrow = 1))
dfplot = rbind(dfplot, matrix(c(num.fail, "BELOW", c), nrow = 1))
}
dfplot = as.data.frame(dfplot, stringsAsFactors = F)
dfplot[,1] = as.numeric(dfplot[,1])
colnames(dfplot) = c("Num. Samples", "Thresh. Count", "Metric")
dfi = dfplot[dfplot[,2] == "BELOW",]
dfplot$Metric = factor(dfplot$Metric, levels = dfi[,3][rev(order(dfi[,1]))])
#----------
# make plot
#----------
fig2a <- ggplot(dfplot, aes(x = `Metric`, y = `Num. Samples`, fill = `Thresh. Count`)) +
geom_bar(stat = 'identity') + scale_fill_manual(values = c("limegreen", "red")) +
theme_bw() + theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
facet_zoom(ylim = c(0, 2500), zoom.data = ifelse(a <= 10, NA, FALSE)) +
xlab("BeadArray Metric") + ylab("Number of\nSamples")
fig2a
source("fig2a.R")
fig2a
source("fig2a.R")
fig2a
dfplot
tr <- bathresh(bat)
dfplot <- matrix(nrow = 0, ncol = 3)
for(c in colnames(tr)[2:18]){
num.pass <- length(which(tr[,c] == "PASS"))
num.fail <- length(which(tr[,c] == "FAIL"))
dfplot = rbind(dfplot, matrix(c(num.pass, "ABOVE", c), nrow = 1))
dfplot = rbind(dfplot, matrix(c(num.fail, "BELOW", c), nrow = 1))
}
dfplot = as.data.frame(dfplot, stringsAsFactors = F)
dfplot[,1] = as.numeric(dfplot[,1])
colnames(dfplot) = c("Num. Samples", "Thresh. Count", "Metric")
dfi = dfplot[dfplot[,2] == "BELOW",]
dfplot$Metric = factor(dfplot$Metric, levels = dfi[,3][rev(order(dfi[,1]))])
dfplot
source("fig2a.R")
fig2a
